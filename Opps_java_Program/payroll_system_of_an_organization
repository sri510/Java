/*
The payroll system of an organization involves calculating the gross salary of each type of employee and the tax applicable to each. 
Create the following entity classes as described below.

Class Employee
Fields: id: int, name : String, basicSalary : double, HRAPer : double, DAPer : double

Public Method: calculateGrossSalary() - returns a double
Calculate the gross salary as : basicSalary +HRAPer +DAPer

Class Manager
Fields: id: int, name : String, basicSalary : double, HRAPer : double,DAPer : double, projectAllowance: double
Public Method: calculateGrossSalary() - returns a double
Calculate the gross salary as : basicSalary +HRAPer +DAPer + projectAllowance

Class Trainer
Fields: id: int, name : String, basicSalary : double, HRAPer : double,DAPer : double, batchCount: int, perkPerBatch: double

Public Method: calculateGrossSalary() - returns a double
Calculate the gross salary as : basicSalary +HRAPer +DAPer +(batchCount * perkPerBatch)

Class Sourcing
Fields: id: int, name : String, basicSalary : double, HRAPer : double,DAPer : double, enrollmentTarget: int, enrollmentReached: int, perkPerEnrollment: double
Public Method: calculateGrossSalary() - returns a double

Calculate the gross salary as : basicSalary +HRAPer +DAPer +((enrollmentReached/enrollmentTarget)*100)*perkPerEnrollment)

Class TaxUtil
Fields: None
Public Methods:
calculateTax(Employee) - returns a double
calculateTax(Manager) - returns a double
calculateTax(Trainer) - returns a double
calculateTax(Sourcing) - returns a double

Tax Calculation Logic: If gross salary is greater than 30000 tax is 20% else, tax is 5%

Note : Attributes/Fields must be non-Private for the above classes.

A ClassObject class is given to you with the main Method. Use this class to test your solution.
*/
---------------------------------------------------------------
This Lab program contains 6 files :
------------------------------------
Employee.java
-------------
package com.sri.lab_prog_tax_util;

public class Employee 
{
  int id;
  String name;
  double basicSalary;
  double HRAPer;
  double DAPer;  
  
  public Employee(int id, String name, double basicSalary, double hRAPer, double dAPer) {
	super();
	this.id = id;
	this.name = name;
	this.basicSalary = basicSalary;
	HRAPer = hRAPer;
	DAPer = dAPer;
}

public double calculateGrossSalary()
  {
	  double grossSalary = this.basicSalary + this.HRAPer + this.DAPer;
	  return grossSalary;
  }
}

Manager.java
-------------
package com.sri.lab_prog_tax_util;

public class Manager 
{
	int id;
	String name;
	double basicSalary;
	double HRAPer;
	double DAPer;
	double projectAllowance;
		
	public Manager(int id, String name, double basicSalary, double hRAPer, double dAPer, double projectAllowance) {
		super();
		this.id = id;
		this.name = name;
		this.basicSalary = basicSalary;
		HRAPer = hRAPer;
		DAPer = dAPer;
		this.projectAllowance = projectAllowance;
	}

	public double calculateGrossSalary()
	  {
		  double grossSalary = this.basicSalary + this.HRAPer + this.DAPer+this.projectAllowance;
		  return grossSalary;
	  }
} 

Trainer.java
-------------
package com.sri.lab_prog_tax_util;

public class Trainer 
{
	 int id;
	  String name;
	  double basicSalary;
	  double HRAPer;
	  double DAPer;
      int batchCount;
      double perkPerBatch;
            
      public Trainer(int id, String name, double basicSalary, double hRAPer, double dAPer, int batchCount,
			double perkPerBatch) {
		super();
		this.id = id;
		this.name = name;
		this.basicSalary = basicSalary;
		HRAPer = hRAPer;
		DAPer = dAPer;
		this.batchCount = batchCount;
		this.perkPerBatch = perkPerBatch;
	}

	public double calculateGrossSalary()
	  {
		  double grossSalary = basicSalary +HRAPer +DAPer +(batchCount * perkPerBatch);

		  return grossSalary;
	  }
}

Sourcing.java
--------------
package com.sri.lab_prog_tax_util;

public class Sourcing 
{
	  int id;
	  String name;
	  double basicSalary;
	  double HRAPer;
	  double DAPer;
	  int enrollmentTarget;
	  int enrollmentReached;
	  double perkPerEnrollment;
	  
	  public Sourcing(int id, String name, double basicSalary, double hRAPer, double dAPer, int enrollmentTarget,
			int enrollmentReached, double perkPerEnrollment) {
		super();
		this.id = id;
		this.name = name;
		this.basicSalary = basicSalary;
		HRAPer = hRAPer;
		DAPer = dAPer;
		this.enrollmentTarget = enrollmentTarget;
		this.enrollmentReached = enrollmentReached;
		this.perkPerEnrollment = perkPerEnrollment;
	}
	public double calculateGrossSalary()
	  {
		  double grossSalary = basicSalary +HRAPer +DAPer +((enrollmentReached/enrollmentTarget)*100)*perkPerEnrollment;
		  return grossSalary;
	  }
}



TaxUtil.java
-------------
package com.sri.lab_prog_tax_util;

public class TaxUtil 
{
 public double calculateTax(Employee emp) 
 {
	 
	 if(emp.calculateGrossSalary() > 30000)
	 {
		return emp.calculateGrossSalary()*0.20; 
	 }
	 else
	 {
		 return emp.calculateGrossSalary()*0.05;
	 }
 } 
 public double calculateTax(Manager man) 
 {
	 if(man.calculateGrossSalary() > 30000)
	 {
		return man.calculateGrossSalary()*0.20; 
	 }
	 else
	 {
		 return man.calculateGrossSalary()*0.05;
	 }
 }
 public double calculateTax(Trainer tnr) 
 {
	 if(tnr.calculateGrossSalary() > 30000)
	 {
		return tnr.calculateGrossSalary()*0.20; 
	 }
	 else
	 {
		 return tnr.calculateGrossSalary()*0.05;
	 } 
 }
 public double calculateTax(Sourcing src) 
 {
	 if(src.calculateGrossSalary() > 30000)
	 {
		return src.calculateGrossSalary()*0.20; 
	 }
	 else
	 {
		 return src.calculateGrossSalary()*0.05;
	 } 
 }

}


ClassObject.java
----------------

package com.sri.lab_prog_tax_util;

public class ClassObject {

	public static void main(String[] args)
	{
	  Employee e1 = new Employee(101, "Virat", 25000, 3000, 2500);
	  
	  TaxUtil tu = new TaxUtil();
	  double tax = tu.calculateTax(e1);
	  System.out.println("Total tax for Virat in this year is : "+tax);
}

}
