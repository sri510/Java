/*Create a BLC(Business Logic Class) called Bowler. Add below details to the class

 1. Instance variables:

 name: private-String,

 wickets: private-int,

 matches: private-int,

 balls_bowled: private-int,

 runs_conceded: private-int.

2. Method - bowlerDetails() : public void

 Create a method name called bowlerDetails() that accepts name, wickets, matches, balls_bowled and runs_conceded.

Method name: bowlerDetails 

Return type: void

 3. Create below public methods,

 Method name: computeBowlingAverage

 Return type: void

 This method should print the bowling average of the bowler by dividing runs_conceded with wickets.

 Input:

 name = "Sachin",

 wickets = 10,

 matches = 5,

 balls_bowled = 750,

 runs_conceded 463.

 Output:

 Name: Sachin

 bowling_avg=46.3

 Note: a. If any values are negative print 'Error'.

 b. If runs_conceded or balls_bowled are greater than 0 when matches are 0 print 'Error'.

 Method name: computeStrikeRate

 Return type: void

 This method should print the Strike Rate of the bowler by dividing runs_conceded with balls_bowled.

 Input:

 name = "Sachin",

 wickets = 10,

 matches = 5,

 balls_bowled = 750,

 runs_conceded 463.

 Output:

 Name: Sachin

 Strike_rate=0.61733335

 Note: a. If any values are negative print 'Error'.

 b. If runs_conceded or balls_bowled are greater than 0 when matches are 0 print 'Error'.

 Method name: showStatistics

 Return type: void

 This method should print the details of the batter.

 Input:

 name = "Sachin",

 wickets = 10,

 matches = 5,

 balls_bowled = 750,

 runs_conceded 463.

 Output:

 Name=Sachin

 wickets=10

 matches=5

 balls_bowled=750

 runs_conceded=463

 Note: a. If any values are negative print 'Error'.

 b. If runs_conceded or balls_bowled are greater than 0 when matches are 0 print 'Error'.

 An ELC(Executable Logic Class) Test that contains main method. Use this class to test your code.
*/
class Bowler{
    private String name;
    private int wickets;
    private int matches;
    private int balls_bowled;
    private int runs_conceded;

 //Declare class variables

	
	//This method is used to set instance values
	public void bowlerDetails(String name, int wickets, int matches, int balls_bowled, int runs_conceded ) {
	 this.name=name;
	 this.wickets=wickets;
	 this.matches=matches;
	 this.balls_bowled=balls_bowled; 
	 this.runs_conceded=runs_conceded;
	    	}
	 
	 //this method is used to calculate and print the bowling average 
	 public void computeBowlingAverage() {
	     if(runs_conceded<0|| balls_bowled<0||wickets<0||matches<0)
	     System.out.println("Error");
	     else if(matches==0&&runs_conceded>0&&balls_bowled>0)
	     System.out.println("Error");
	     else
	     {
	         System.out.println("Name="+name);
	         double  bowling_avg=(double)runs_conceded/wickets;
	         System.out.println("bowling_avg="+bowling_avg);
	     }
		 
		 
	 }
	 
	 //this method is used to calculate and print bowling strike rate
	 public void computeStrikeRate() {
	    if(runs_conceded<0|| balls_bowled<0||wickets<0||matches<0)
	     System.out.println("Error");
	     else if(runs_conceded>0&&balls_bowled>0&&matches==0)
	     System.out.println("Error"); 
	     else
	     {   
	         System.out.println("========================");
	         System.out.println("Name="+name);
	         double Strike_rate=(double)runs_conceded/balls_bowled;
	         System.out.println("Strike_rate="+Strike_rate);
	     }
		 
		 
		 
	 }
	 
	 //this method is used to display bowler/batter statistics
	 public void showStatistics() {
	    if(runs_conceded<0|| balls_bowled<0||wickets<0||matches<0)
	     System.out.println("Error");
	     else if(runs_conceded>0&&balls_bowled>0&&matches==0)
	     System.out.println("Error"); 
	     else
	     {
	         System.out.println("========================");
	         System.out.println("Name="+name);
	         System.out.println("wickets="+wickets);
	         System.out.println("matches="+matches);
	         System.out.println("balls_bowled="+balls_bowled);
	         System.out.println("runs_conceded="+runs_conceded);
	     }
	 }
	
	
}

//An ELC(Executable Logic class) class with main method to test your code
public class BowlerDetails {

	public static void main(String[] args) {
		Bowler b=new Bowler();
		//create new object to Bowler class

		b.bowlerDetails("Sachin",10,5,750,463);
		//call bowlerDetails method by passing bowler information.
		// this step will assign values to instance variables
	
		b.computeBowlingAverage();
		//call this method to see bowling average
		
		b.computeStrikeRate();
		// call this method to see bowling strike rate
		
		b.showStatistics();
		// call this method to see bowler/batter statistics
		
	}

}
