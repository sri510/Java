/*Implement a card game. Use Enum to represent card suits (Hearts, Diamonds, Clubs, Spades) and Inner classes to manage card ranks (Ace, 2-10, Jack, Queen, King).



// Enum representing card suits

Create an Enum class Suit

Instance variable:-

Hearts

Diamonds 

Clubs 

Spades







// Class representing a Card with inner classes for card ranks



Create a BLC class Card



// Inner class for card ranks

Create an Enum Inner class Rank

Instance Variable:-

ACE

TWO 

THREE 

FOUR 

FIVE 

SIX 

SEVEN 

EIGHT 

NINE 

TEN 

JACK 

QUEEN 

KING





Instance Variable for Card class:-

Suit suit,private

Rank rank,private



//Constructor parameterise

Generate getter method



@Override to String method



// Main class for the card game

Create an ELC class CardGame which contain main method to test your code.

 // Creating a deck of cards

Create an object for Card class array type which contains 52 length.

take a local variable cardIndex,int with default value.



Output:-

ACE of HEARTS

TWO of HEARTS

THREE of HEARTS

FOUR of HEARTS

FIVE of HEARTS

SIX of HEARTS

SEVEN of HEARTS

EIGHT of HEARTS

NINE of HEARTS

TEN of HEARTS

JACK of HEARTS

QUEEN of HEARTS

KING of HEARTS

ACE of DIAMONDS

TWO of DIAMONDS

THREE of DIAMONDS

FOUR of DIAMONDS

FIVE of DIAMONDS

SIX of DIAMONDS

SEVEN of DIAMONDS

EIGHT of DIAMONDS

NINE of DIAMONDS

TEN of DIAMONDS

JACK of DIAMONDS

QUEEN of DIAMONDS

KING of DIAMONDS

ACE of CLUBS

TWO of CLUBS

THREE of CLUBS

FOUR of CLUBS

FIVE of CLUBS

SIX of CLUBS

SEVEN of CLUBS

EIGHT of CLUBS

NINE of CLUBS

TEN of CLUBS

JACK of CLUBS

QUEEN of CLUBS

KING of CLUBS

ACE of SPADES

TWO of SPADES

THREE of SPADES

FOUR of SPADES

FIVE of SPADES

SIX of SPADES

SEVEN of SPADES

EIGHT of SPADES

NINE of SPADES

TEN of SPADES

JACK of SPADES

QUEEN of SPADES

KING of SPADES
*/
enum Suit {
	Hearts,Diamonds,Clubs,Spades;
}
 class Card {
	public enum Rank{
		ACE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE,TEN,JACK,QUEEN,KING;
	}
	private Suit suit;
	private Rank rank;
	public Card(Suit suit, Rank rank) {
		super();
		this.suit = suit;
		this.rank = rank;
	}
	protected Suit getSuit() {
		return suit;
	}
	protected Rank getRank() {
		return rank;
	}
	@Override
	public String toString() {
		return rank+ " of " + suit;
	}
	
}

public class CradGame

{
    public static void main(String[] args)
    {
      Card deck[]=new Card[52];
		int cardIndex=0;
		for(Suit suit:Suit.values()) {
			for(Card.Rank rank:Card.Rank.values()) {
				deck[cardIndex]=new Card(suit, rank);
				cardIndex++;
			}
		}
		
		for(Card c:deck) {
			System.out.println(c);
		}  
    }
}
